#///////////////////////////////////////////////////////////////////////////////////
#//
#// Copyright (C) 2008 Jamal M. Natour
#//
#// This file is part of the OmegaOnline  package.
#//
#// It is free software: you can redistribute it and/or modify
#// it under the terms of the GNU Lesser General Public License as published by
#// the Free Software Foundation, either version 3 of the License, or
#// (at your option) any later version.
#//
#//  is distributed in the hope that it will be useful,
#// but WITHOUT ANY WARRANTY; without even the implied warranty of
#// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#// GNU Lesser General Public License for more details.
#//
#// You should have received a copy of the GNU Lesser General Public License
#// along with this file.  If not, see <http://www.gnu.org/licenses/>.
#//
#///////////////////////////////////////////////////////////////////////////////////
#!/bin/sh
work_dir_set()
{
	if [ $OMEGA_WORK_DIR"" == "" ] ;
	then
		echo "OMEGA_WORK_DIR is unset" ;
		return `false`;
	fi
	if [ $ENV_DIR"" == "" ] ;
	then
		echo "ENV_DIR is unset" ;
		return `false`;
	fi
	echo	"OMEGA_WORK_DIR=[$OMEGA_WORK_DIR]" ;
	echo	"ENV_DIR=[$ENV_DIR]" ;
	return `true`
}

make_project()
{
	project=$1;
	shift;
	echo "Building $project"
	{ cd $OMEGA_WORK_DIR; make -f makefiles/$project.mk ENV_DIR="$ENV_DIR" $RELEASE_FLAG $VERBOSE_FLAG $@ ; };
	echo "Built $project"
}

regen_config_script()
{
	{	
		cd $OMEGA_WORK_DIR; 			\
		autoreconf -i ; 			\
		automake --add-missing 2> /dev/null; 	\
		autoconf ; 				\
	} ;
}
configure_build()
{
	{	
		cd $OMEGA_WORK_DIR; 			\
		./configure $@;				\
	} ;
}

make_all()
{
	for project in  "OOCore" "OOSvrUsr" "OOServer" ; 
	do
		make_project $project  $*  || exit $?;
	done
}


# See how we were called.
work_dir_set

# strip out options
case $1 in -vr|-rv|-v|-r|--release|--verbose)
	set -x
	opt=$1;
	shift;
	case $opt in -vr|-rv)
		export VERBOSE_FLAG="VERBOSE=1" 
		export RELEASE_FLAG="RELEASE=1" 
	;;
	-v|--verbose)	export VERBOSE_FLAG="VERBOSE=1" ;;
	-r|--release)	export RELEASE_FLAG="RELEASE=1" ;;
	esac
esac

target=$1;
shift;
case $target in
	# build all the sub projects
	clean|all|build|depend|install|tall)
		make_all $target $RELEASE_FLAG $VERBOSE_FLAG $* 
	;;
	# build the core
	oocore|ooserver|oouser|core|server|user)
		case $target in 
		oocore|core) 	 make_project "OOCore" $* ;;
		# build the sandbox process
		oouser|user) 	 make_project "OOSvrUsr" $* ;;
		ooserver|server) make_project "OOServer" $* ;;
		# build the server process
		ooserver) 	make_ooserver $RELEASE_FLAG $VERBOSE_FLAG $* ;;
		esac
	;;
	regen|reconfigure|reconf)
		regen_config_script 
	;;
	configure|conf)
		configure_build
	;;
	
	# default:
	help)
		echo -e  "[ Targets ]"
		echo -e  "\tclean 	remove *all* autogenerated files."
		echo -e  "\tclean 	remove *all* autogenerated files."
		echo -e  "\toocore	build the core. [ Has Subtargets ]"
		echo -e  "\tooserver 	build the server.[ Has Subtargets ]"
		echo -e  "\toouser 	build the server user.[ Has Subtargets ]"
		echo -e  "\tregen 	regenerate the configure script."
		echo -e  "\tconf 	configure Omega for your system."

		echo -e  "\n[ Option ]"
		echo -e  "\t--verbose (-v)"
		echo -e  "\t--release (-r)"
		echo -e  "\t[-vr|-rv] selects both verbose and release"

		echo -e  "\n[ Subtargets]"
		echo -e  "\tclean\tclean the subproject"
		echo -e  "\tbuild\tbuild the subproject"
		echo -e  "\tinstall\tclean the subproject"
		echo -e  "\tdepend\tinstall the subproject"
		echo -e  "\ttest\tbuild tests for subproject"
		echo -e  "\trun-test\trun tests for subproject"
		false;
		;;
	*)
		echo "Usage: `basename $0`  [Options] Target [Subtargets]"
		echo -e  "'build_omega.sh help' for more details."
		;;
	esac
	exit $?;
